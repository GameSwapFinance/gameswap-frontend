{"version":3,"sources":["views/Home/components/CardValue.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","hooks/useTokenBalance.ts","components/Tags.tsx","hooks/useStake.ts","config/index.ts","components/layout/Flex.tsx","hooks/useApprove.ts","hooks/useUnstake.ts","hooks/useBlock.ts","views/Profit/components/Card.tsx","views/Profit/components/CardTitle.tsx","views/Profit/components/Coming.tsx","views/Profit/components/CakeStats.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Profit/components/DepositModal.tsx","views/Profit/components/WithdrawModal.tsx","views/Profit/components/CompoundModal.tsx","views/Profit/components/OldSyrupTitle.tsx","views/Profit/components/HarvestButton.tsx","views/Profit/components/CardFooter.tsx","views/Profit/components/PoolCard.tsx","views/Profit/components/PoolTabButtons/index.tsx","views/Profit/components/Divider.tsx","views/Profit/Profit.tsx"],"names":["CardValue","value","decimals","fontSize","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","useEffect","current","bold","StyledSpacer","styled","div","props","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","theme","colors","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","map","child","i","StyledInputWrapper","input","radii","default","StyledInput","primary","Input","endAdornment","onChange","placeholder","startAdornment","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","TranslateString","useI18n","toLocaleString","onClick","BigNumber","times","toString","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","a","cakeContract","getContract","cakeABI","getCakeAddress","methods","call","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","balanceOf","bal","fetchBalance","useTokenBalance","useWallet","account","ethereum","fastRefresh","getTokenBalance","res","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useSousStake","sousId","isUsingBnb","dispatch","useDispatch","masterChefContract","useMasterchef","sousChefContract","useSousChef","handleStake","useCallback","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","pid","txHash","fetchFarmUserDataAsync","console","info","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","FlexLayout","useApprove","lpContract","onApprove","approve","tx","useSousApprove","updateUserAllowance","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","unstake","sousEmegencyUnstake","sousUnstake","updateUserPendingReward","useUnstake","useBlock","BlockContext","Card","card","background","isFinished","isActive","CardTitle","text","Label","textSubtle","DetailPlaceholder","Value","Footer","isDark","Coming","style","padding","src","width","height","alt","as","href","external","fullWidth","mb","flex","CakeStats","burnedBalance","farms","useFarms","circSupply","minus","blocksTillProfit","eggPerBlock","pow","toNumber","getBalanceNumber","StyledLabel","StyledText","Text","isDisabled","color","textDisabled","Balance","unit","previousValue","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","id","Title","ActionLink","OldSyrupTitle","hasBalance","target","StyledButton","button","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","PoolCategory","BINANCE","CORE","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","poolCategory","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","role","aria-label","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","pool","image","stakingTokenName","stakingTokenAddress","harvest","apy","tokenDecimals","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","useERC20","block","onReward","useSousHarvest","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","QuoteToken","SYRUP","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","HarvestButton","UnlockButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","Hero","Farm","path","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","find","f","tokenSymbol","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/8.f8bb73b8.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@gameswapfinance/uikit'\n\ninterface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  prefix?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({ value, decimals, fontSize = '40px', prefix }) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold fontSize={fontSize}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.input};\n  border-radius: ${(props) => props.theme.radii.default};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@gameswapfinance/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@gameswapfinance/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@gameswapfinance/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>STONK Dividends</CardTitle>\n        <Image src=\"/images/egg/9.png\" width={64} height={64} alt=\"Dividends\" />\n        <br />\n        <Label>Distributes weekly fee income back to STONK holders</Label>\n        <Button variant=\"secondary\" as=\"a\" href=\"\" external fullWidth mb=\"16px\">\n          Coming Soon\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          <Value>TBD</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(384, 'Your Stake')}:</div>\n          <Value>0 STONK</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@gameswapfinance/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from '../../Home/components/CardValue'\nimport { useFarms, usePriceCakeBusd } from '../../../state/hooks'\n\nconst StyledCakeStats = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst CakeStats = () => {\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const farms = useFarms()\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0)\n  const blocksTillProfit = new BigNumber(100000 * 1000000000000000000).minus(circSupply)\n\n  let eggPerBlock = 0\n  if (farms && farms[0] && farms[0].eggPerBlock) {\n    eggPerBlock = new BigNumber(farms[0].eggPerBlock).div(new BigNumber(10).pow(18)).toNumber()\n  }\n\n  return (\n    <Heading as=\"h3\">\n      {blocksTillProfit && (\n        <CardValue\n          fontSize=\"20px\"\n          value={getBalanceNumber(blocksTillProfit)}\n          decimals={0}\n          prefix=\"Blocks until profit sharing \"\n        />\n      )}\n    </Heading>\n  )\n}\n\nexport default CakeStats\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@gameswapfinance/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@gameswapfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@gameswapfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@gameswapfinance/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@gameswapfinance/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@gameswapfinance/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@gameswapfinance/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport CakeStats from './components/CakeStats'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'Profit Sharing Pool')}\n          </Heading>\n          <ul>\n            <li>Stake STONK to revieve dividend payouts.</li>\n            <li>You can unstake at any time.</li>\n            <li>Dividends are distributed linearly over each week.</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <CakeStats />\n      <br />\n\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </>\n          <Coming />\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}